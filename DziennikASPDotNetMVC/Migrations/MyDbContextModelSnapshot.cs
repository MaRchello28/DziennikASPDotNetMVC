// <auto-generated />
using System;
using DziennikASPDotNetMVC.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DziennikASPDotNetMVC.Migrations
{
    [DbContext(typeof(MyDbContext))]
    partial class MyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DziennikASPDotNetMVC.Models.Announcement", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("image")
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("teacherId")
                        .HasColumnType("int");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("whenUpload")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.ToTable("Announcements");
                });

            modelBuilder.Entity("DziennikASPDotNetMVC.Models.Attendance", b =>
                {
                    b.Property<int>("attendanceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("attendanceId"));

                    b.Property<string>("isPresent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("lessonId")
                        .HasColumnType("int");

                    b.Property<int>("studentId")
                        .HasColumnType("int");

                    b.HasKey("attendanceId");

                    b.HasIndex("lessonId");

                    b.ToTable("Attendances");
                });

            modelBuilder.Entity("DziennikASPDotNetMVC.Models.Grade", b =>
                {
                    b.Property<int>("gradeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("gradeId"));

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("studentId")
                        .HasColumnType("int");

                    b.Property<int>("subjectId")
                        .HasColumnType("int");

                    b.Property<int>("teacherId")
                        .HasColumnType("int");

                    b.Property<DateTime>("time")
                        .HasColumnType("datetime2");

                    b.Property<double>("value")
                        .HasColumnType("float");

                    b.Property<int>("wage")
                        .HasColumnType("int");

                    b.HasKey("gradeId");

                    b.ToTable("Grades");
                });

            modelBuilder.Entity("DziennikASPDotNetMVC.Models.HoursForLessons", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<TimeSpan>("hourFrom")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("hourTo")
                        .HasColumnType("time");

                    b.HasKey("id");

                    b.ToTable("HoursForLessons");
                });

            modelBuilder.Entity("DziennikASPDotNetMVC.Models.Lesson", b =>
                {
                    b.Property<int>("lessonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("lessonId"));

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("nuberOfLesson")
                        .HasColumnType("int");

                    b.Property<int?>("replacementTeacherId")
                        .HasColumnType("int");

                    b.Property<int>("sessionId")
                        .HasColumnType("int");

                    b.HasKey("lessonId");

                    b.HasIndex("sessionId");

                    b.ToTable("Lessons");
                });

            modelBuilder.Entity("DziennikASPDotNetMVC.Models.LinkTable.TeacherWithSubject", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("subjectId")
                        .HasColumnType("int");

                    b.Property<int>("teacherId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("TeacherWithSubjects");
                });

            modelBuilder.Entity("DziennikASPDotNetMVC.Models.Mail", b =>
                {
                    b.Property<int>("mailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("mailId"));

                    b.Property<string>("body")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("from")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("read")
                        .HasColumnType("bit");

                    b.Property<DateTime>("send")
                        .HasColumnType("datetime2");

                    b.Property<string>("subject")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("to")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("userId")
                        .HasColumnType("int");

                    b.HasKey("mailId");

                    b.HasIndex("userId");

                    b.ToTable("Mails");
                });

            modelBuilder.Entity("DziennikASPDotNetMVC.Models.Session", b =>
                {
                    b.Property<int>("sessionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("sessionId"));

                    b.Property<int>("dayOfTheWeek")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("hourFrom")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("hourTo")
                        .HasColumnType("time");

                    b.Property<int>("sala")
                        .HasColumnType("int");

                    b.Property<int>("studentClassId")
                        .HasColumnType("int");

                    b.Property<int>("subjectId")
                        .HasColumnType("int");

                    b.Property<int>("teacherId")
                        .HasColumnType("int");

                    b.HasKey("sessionId");

                    b.ToTable("Sessions");
                });

            modelBuilder.Entity("DziennikASPDotNetMVC.Models.StudentClass", b =>
                {
                    b.Property<int>("studentClassId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("studentClassId"));

                    b.Property<string>("letter")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("number")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<int>("teacherId")
                        .HasColumnType("int");

                    b.HasKey("studentClassId");

                    b.ToTable("StudentClasses");
                });

            modelBuilder.Entity("DziennikASPDotNetMVC.Models.StudentWithClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("studentClassId")
                        .HasColumnType("int");

                    b.Property<int>("studentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("studentClassId");

                    b.HasIndex("studentId");

                    b.ToTable("StudentWithClasses");
                });

            modelBuilder.Entity("DziennikASPDotNetMVC.Models.Subject", b =>
                {
                    b.Property<int>("subjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("subjectId"));

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("subjectId");

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("DziennikASPDotNetMVC.Models.User", b =>
                {
                    b.Property<int>("userId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("userId"));

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("login")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("studentClassId")
                        .HasColumnType("int");

                    b.Property<string>("surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("userId");

                    b.HasIndex("studentClassId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("DziennikASPDotNetMVC.Models.Attendance", b =>
                {
                    b.HasOne("DziennikASPDotNetMVC.Models.Lesson", null)
                        .WithMany("attendances")
                        .HasForeignKey("lessonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DziennikASPDotNetMVC.Models.Lesson", b =>
                {
                    b.HasOne("DziennikASPDotNetMVC.Models.Session", null)
                        .WithMany("lessons")
                        .HasForeignKey("sessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DziennikASPDotNetMVC.Models.Mail", b =>
                {
                    b.HasOne("DziennikASPDotNetMVC.Models.User", null)
                        .WithMany("messages")
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DziennikASPDotNetMVC.Models.StudentWithClass", b =>
                {
                    b.HasOne("DziennikASPDotNetMVC.Models.StudentClass", "StudentClass")
                        .WithMany("StudentWithClasses")
                        .HasForeignKey("studentClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DziennikASPDotNetMVC.Models.User", "Student")
                        .WithMany()
                        .HasForeignKey("studentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");

                    b.Navigation("StudentClass");
                });

            modelBuilder.Entity("DziennikASPDotNetMVC.Models.User", b =>
                {
                    b.HasOne("DziennikASPDotNetMVC.Models.StudentClass", null)
                        .WithMany("Students")
                        .HasForeignKey("studentClassId");
                });

            modelBuilder.Entity("DziennikASPDotNetMVC.Models.Lesson", b =>
                {
                    b.Navigation("attendances");
                });

            modelBuilder.Entity("DziennikASPDotNetMVC.Models.Session", b =>
                {
                    b.Navigation("lessons");
                });

            modelBuilder.Entity("DziennikASPDotNetMVC.Models.StudentClass", b =>
                {
                    b.Navigation("StudentWithClasses");

                    b.Navigation("Students");
                });

            modelBuilder.Entity("DziennikASPDotNetMVC.Models.User", b =>
                {
                    b.Navigation("messages");
                });
#pragma warning restore 612, 618
        }
    }
}

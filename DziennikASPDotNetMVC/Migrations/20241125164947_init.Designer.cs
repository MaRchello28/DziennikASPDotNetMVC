// <auto-generated />
using System;
using DziennikASPDotNetMVC.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DziennikASPDotNetMVC.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20241125164947_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DziennikASPDotNetMVC.Models.Admin", b =>
                {
                    b.Property<int>("adminId")
                        .HasColumnType("int");

                    b.HasKey("adminId");

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("DziennikASPDotNetMVC.Models.Attendance", b =>
                {
                    b.Property<int>("attendanceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("attendanceId"));

                    b.Property<string>("isPresent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("lessonId")
                        .HasColumnType("int");

                    b.Property<int>("studentId")
                        .HasColumnType("int");

                    b.HasKey("attendanceId");

                    b.HasIndex("lessonId");

                    b.ToTable("Attendances");
                });

            modelBuilder.Entity("DziennikASPDotNetMVC.Models.ClassSchedule", b =>
                {
                    b.Property<int>("classScheduleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("classScheduleId"));

                    b.Property<int>("studentClassId")
                        .HasColumnType("int");

                    b.HasKey("classScheduleId");

                    b.ToTable("ClassSchedules");
                });

            modelBuilder.Entity("DziennikASPDotNetMVC.Models.Grade", b =>
                {
                    b.Property<int>("gradeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("gradeId"));

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("sessionId")
                        .HasColumnType("int");

                    b.Property<int>("studentId")
                        .HasColumnType("int");

                    b.Property<int>("subjectId")
                        .HasColumnType("int");

                    b.Property<int>("teacherId")
                        .HasColumnType("int");

                    b.Property<DateTime>("time")
                        .HasColumnType("datetime2");

                    b.Property<double>("value")
                        .HasColumnType("float");

                    b.Property<int>("wage")
                        .HasColumnType("int");

                    b.HasKey("gradeId");

                    b.HasIndex("studentId");

                    b.ToTable("Grades");
                });

            modelBuilder.Entity("DziennikASPDotNetMVC.Models.Lesson", b =>
                {
                    b.Property<int>("lessonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("lessonId"));

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("nuberOfLesson")
                        .HasColumnType("int");

                    b.Property<int>("sessionId")
                        .HasColumnType("int");

                    b.HasKey("lessonId");

                    b.HasIndex("sessionId");

                    b.ToTable("Lessons");
                });

            modelBuilder.Entity("DziennikASPDotNetMVC.Models.Mail", b =>
                {
                    b.Property<int>("mailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("mailId"));

                    b.Property<string>("body")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("from")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("read")
                        .HasColumnType("bit");

                    b.Property<DateTime>("send")
                        .HasColumnType("datetime2");

                    b.Property<string>("subject")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("to")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("userId")
                        .HasColumnType("int");

                    b.HasKey("mailId");

                    b.HasIndex("userId");

                    b.ToTable("Mails");
                });

            modelBuilder.Entity("DziennikASPDotNetMVC.Models.Parent", b =>
                {
                    b.Property<int>("parentId")
                        .HasColumnType("int");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("parentId");

                    b.ToTable("Parents");
                });

            modelBuilder.Entity("DziennikASPDotNetMVC.Models.Session", b =>
                {
                    b.Property<int>("sessionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("sessionId"));

                    b.Property<int>("ClassScheduleId")
                        .HasColumnType("int");

                    b.Property<int>("dayOfTheWeek")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("hourFrom")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("hourTo")
                        .HasColumnType("time");

                    b.Property<int>("sala")
                        .HasColumnType("int");

                    b.Property<int>("subjectId")
                        .HasColumnType("int");

                    b.Property<int>("teacherId")
                        .HasColumnType("int");

                    b.HasKey("sessionId");

                    b.HasIndex("ClassScheduleId");

                    b.HasIndex("teacherId");

                    b.ToTable("Sessions");
                });

            modelBuilder.Entity("DziennikASPDotNetMVC.Models.Student", b =>
                {
                    b.Property<int>("studentId")
                        .HasColumnType("int");

                    b.Property<int?>("parentId")
                        .HasColumnType("int");

                    b.Property<int?>("studentClassId")
                        .HasColumnType("int");

                    b.HasKey("studentId");

                    b.HasIndex("parentId");

                    b.HasIndex("studentClassId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("DziennikASPDotNetMVC.Models.StudentClass", b =>
                {
                    b.Property<int>("studentClassId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("studentClassId"));

                    b.Property<int?>("classScheduleId")
                        .HasColumnType("int");

                    b.Property<string>("letter")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("number")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<int>("teacherId")
                        .HasColumnType("int");

                    b.HasKey("studentClassId");

                    b.ToTable("StudentClasses");
                });

            modelBuilder.Entity("DziennikASPDotNetMVC.Models.Subject", b =>
                {
                    b.Property<int>("subjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("subjectId"));

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("subjectId");

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("DziennikASPDotNetMVC.Models.Teacher", b =>
                {
                    b.Property<int>("teacherId")
                        .HasColumnType("int");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("teacherId");

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("DziennikASPDotNetMVC.Models.User", b =>
                {
                    b.Property<int>("userId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("userId"));

                    b.Property<string>("login")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("userId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("DziennikASPDotNetMVC.Models.Admin", b =>
                {
                    b.HasOne("DziennikASPDotNetMVC.Models.User", "user")
                        .WithOne()
                        .HasForeignKey("DziennikASPDotNetMVC.Models.Admin", "adminId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user");
                });

            modelBuilder.Entity("DziennikASPDotNetMVC.Models.Attendance", b =>
                {
                    b.HasOne("DziennikASPDotNetMVC.Models.Lesson", null)
                        .WithMany("attendances")
                        .HasForeignKey("lessonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DziennikASPDotNetMVC.Models.Grade", b =>
                {
                    b.HasOne("DziennikASPDotNetMVC.Models.Student", null)
                        .WithMany("grades")
                        .HasForeignKey("studentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DziennikASPDotNetMVC.Models.Lesson", b =>
                {
                    b.HasOne("DziennikASPDotNetMVC.Models.Session", null)
                        .WithMany("lessons")
                        .HasForeignKey("sessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DziennikASPDotNetMVC.Models.Mail", b =>
                {
                    b.HasOne("DziennikASPDotNetMVC.Models.User", null)
                        .WithMany("messages")
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DziennikASPDotNetMVC.Models.Parent", b =>
                {
                    b.HasOne("DziennikASPDotNetMVC.Models.User", "user")
                        .WithOne()
                        .HasForeignKey("DziennikASPDotNetMVC.Models.Parent", "parentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user");
                });

            modelBuilder.Entity("DziennikASPDotNetMVC.Models.Session", b =>
                {
                    b.HasOne("DziennikASPDotNetMVC.Models.ClassSchedule", null)
                        .WithMany("sessions")
                        .HasForeignKey("ClassScheduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DziennikASPDotNetMVC.Models.Teacher", "replacement")
                        .WithMany("sessions")
                        .HasForeignKey("teacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("replacement");
                });

            modelBuilder.Entity("DziennikASPDotNetMVC.Models.Student", b =>
                {
                    b.HasOne("DziennikASPDotNetMVC.Models.Parent", null)
                        .WithMany("children")
                        .HasForeignKey("parentId");

                    b.HasOne("DziennikASPDotNetMVC.Models.StudentClass", null)
                        .WithMany("students")
                        .HasForeignKey("studentClassId");

                    b.HasOne("DziennikASPDotNetMVC.Models.User", "user")
                        .WithOne()
                        .HasForeignKey("DziennikASPDotNetMVC.Models.Student", "studentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user");
                });

            modelBuilder.Entity("DziennikASPDotNetMVC.Models.Teacher", b =>
                {
                    b.HasOne("DziennikASPDotNetMVC.Models.User", "user")
                        .WithOne()
                        .HasForeignKey("DziennikASPDotNetMVC.Models.Teacher", "teacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user");
                });

            modelBuilder.Entity("DziennikASPDotNetMVC.Models.ClassSchedule", b =>
                {
                    b.Navigation("sessions");
                });

            modelBuilder.Entity("DziennikASPDotNetMVC.Models.Lesson", b =>
                {
                    b.Navigation("attendances");
                });

            modelBuilder.Entity("DziennikASPDotNetMVC.Models.Parent", b =>
                {
                    b.Navigation("children");
                });

            modelBuilder.Entity("DziennikASPDotNetMVC.Models.Session", b =>
                {
                    b.Navigation("lessons");
                });

            modelBuilder.Entity("DziennikASPDotNetMVC.Models.Student", b =>
                {
                    b.Navigation("grades");
                });

            modelBuilder.Entity("DziennikASPDotNetMVC.Models.StudentClass", b =>
                {
                    b.Navigation("students");
                });

            modelBuilder.Entity("DziennikASPDotNetMVC.Models.Teacher", b =>
                {
                    b.Navigation("sessions");
                });

            modelBuilder.Entity("DziennikASPDotNetMVC.Models.User", b =>
                {
                    b.Navigation("messages");
                });
#pragma warning restore 612, 618
        }
    }
}
